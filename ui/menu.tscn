[gd_scene load_steps=11 format=2]

[ext_resource path="res://levels/level1.tscn" type="PackedScene" id=1]
[ext_resource path="res://light_manager.tscn" type="PackedScene" id=2]
[ext_resource path="res://ui/level_entry.tscn" type="PackedScene" id=3]
[ext_resource path="res://ui/img/close-normal.svg" type="Texture" id=4]
[ext_resource path="res://env_default.tres" type="Environment" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

var level_entry_scene = preload(\"res://ui/level_entry.tscn\")
var locked_level_preview_scene = preload(\"res://locked_level.tscn\")

var game_scene = preload(\"res://game.tscn\")

onready var preview_container = $preview/Viewport
onready var level_entries_container = $ScrollContainer/VBoxContainer
onready var progress_storage = $\"/root/progress_storage\"

var chapter_progress = null

# TODO: Set from previous menu when/if there will be more chapters
onready var chapter = $\"/root/metadata/chapter1\"

func reload_levels():
	for child in level_entries_container.get_children():
		level_entries_container.remove_child(child)
	
	var incomplete_levels = 0
	
	var levels = chapter.get_levels()
	var preview_entry = null

	for level in levels:
		var entry = level_entry_scene.instance()
		entry.level = level
		var level_progress = chapter_progress.get_level_progress(level)
		entry.progress = level_progress
		entry.open = level.max_skipped_before >= incomplete_levels

		level_entries_container.add_child(entry)

		if not level_progress.is_completed():
			incomplete_levels += 1

			if entry.open and not preview_entry:
				preview_entry = entry

		entry.connect(\"on_selected\", self, 'on_entry_selected')
		entry.connect(\"on_play\", self, 'on_entry_play')
	
	if not preview_entry:
		preview_entry = preview_container.get_child(0)

	set_preview_entry(preview_entry)

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
	if not chapter_progress:
		chapter_progress = progress_storage.load_chapter_progress(chapter)
	reload_levels()

var current_selected_entry = null

func set_preview_entry(entry):
	if entry == current_selected_entry:
		return
	
	if current_selected_entry:
		current_selected_entry.set_selected(false)

	if entry.open or current_selected_entry.open:
		var present = preview_container.get_node(\"level\")
		if present:
			present.free()
		
		var preview_scene = locked_level_preview_scene
		if entry.open:
			preview_scene = load(entry.level.level_scene)

		var new_preview: Spatial = preview_scene.instance()
		new_preview.name = \"level\"

		preview_container.add_child(new_preview)
	
	current_selected_entry = entry
	entry.set_selected(true)

func on_entry_selected(entry):
	set_preview_entry(entry)

func on_entry_play(entry):
	var game = game_scene.instance()
	game.chapter_progress = chapter_progress
	get_parent().add_child(game)
	game.change_level(entry.level)
	queue_free()
"

[sub_resource type="GDScript" id=2]
script/source = "extends TextureRect

# Viewport-related stuff in Godot just sucks.

onready var viewport: Viewport = $Viewport
var prev_size = null

func _ready():
	texture = viewport.get_texture()
	flip_v = true


func _process(delta):
	if rect_size != prev_size:
		prev_size = rect_size
		viewport.set_size(rect_size)
"

[sub_resource type="Animation" id=3]
resource_name = "idle"
length = 20.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 5, 8.2, 13.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 5, 10, 0 ), Vector3( 10, 8, 0 ), Vector3( 10, 1, 0 ) ]
}

[sub_resource type="GDScript" id=4]
script/source = "extends AnimationPlayer

func _ready():
	play(\"idle\")
"

[sub_resource type="GDScript" id=5]
script/source = "extends TextureButton

func _on_close_button_pressed():
	get_tree().quit(0)
"

[node name="level_list" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="preview" type="TextureRect" parent="."]
anchor_left = 0.5
anchor_right = 1.0
anchor_bottom = 1.0
stretch_mode = 1
flip_v = true
script = SubResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="preview"]
size = Vector2( 512, 600 )
handle_input_locally = false
fxaa = true
gui_disable_input = true

[node name="light_manager" parent="preview/Viewport" instance=ExtResource( 2 )]

[node name="level" parent="preview/Viewport" instance=ExtResource( 1 )]

[node name="camera_container" type="Spatial" parent="preview/Viewport"]

[node name="Camera" type="Camera" parent="preview/Viewport/camera_container"]
transform = Transform( -0.96614, 0.226567, -0.123454, 0.1278, 0.835863, 0.533854, 0.224144, 0.5, -0.836516, -1.50006, 2.09134, -3.45295 )
keep_aspect = 0
environment = ExtResource( 5 )
current = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="preview/Viewport/camera_container"]
anims/idle = SubResource( 3 )
script = SubResource( 4 )

[node name="ScrollContainer" type="ScrollContainer" parent="."]
anchor_right = 0.5
anchor_bottom = 1.0
follow_focus = true
scroll_horizontal_enabled = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="ScrollContainer"]
margin_right = 500.0
margin_bottom = 1448.0
size_flags_horizontal = 3

[node name="Control" parent="ScrollContainer/VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 500.0
margin_bottom = 128.0

[node name="Control2" parent="ScrollContainer/VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 132.0
margin_right = 500.0
margin_bottom = 260.0

[node name="Control3" parent="ScrollContainer/VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 264.0
margin_right = 500.0
margin_bottom = 392.0

[node name="Control4" parent="ScrollContainer/VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 396.0
margin_right = 500.0
margin_bottom = 524.0

[node name="Control5" parent="ScrollContainer/VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 528.0
margin_right = 500.0
margin_bottom = 656.0

[node name="Control6" parent="ScrollContainer/VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 660.0
margin_right = 500.0
margin_bottom = 788.0

[node name="Control7" parent="ScrollContainer/VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 792.0
margin_right = 500.0
margin_bottom = 920.0

[node name="Control8" parent="ScrollContainer/VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 924.0
margin_right = 500.0
margin_bottom = 1052.0

[node name="Control9" parent="ScrollContainer/VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 1056.0
margin_right = 500.0
margin_bottom = 1184.0

[node name="Control10" parent="ScrollContainer/VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 1188.0
margin_right = 500.0
margin_bottom = 1316.0

[node name="Control11" parent="ScrollContainer/VBoxContainer" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 1320.0
margin_right = 500.0
margin_bottom = 1448.0

[node name="close_button" type="TextureButton" parent="."]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -96.0
margin_top = 32.0
margin_right = -32.0
margin_bottom = 96.0
texture_normal = ExtResource( 4 )
script = SubResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="pressed" from="close_button" to="close_button" method="_on_close_button_pressed"]
